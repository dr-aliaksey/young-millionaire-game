import 'package:flutter/material.dart';
import '../main.dart';
import '../services/game_service.dart';
import 'character_selection_screen.dart';

/// –ì–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
class HomeScreen extends StatefulWidget {
  const HomeScreen({super.key});

  @override
  State<HomeScreen> createState() => _HomeScreenState();
}

class _HomeScreenState extends State<HomeScreen>
    with TickerProviderStateMixin {
  late AnimationController _bounceController;
  late AnimationController _fadeController;
  late Animation<double> _bounceAnimation;
  late Animation<double> _fadeAnimation;
  
  final GameService _gameService = GameService();

  @override
  void initState() {
    super.initState();
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–Ω–∏–º–∞—Ü–∏–π
    _bounceController = AnimationController(
      duration: const Duration(seconds: 2),
      vsync: this,
    );
    
    _fadeController = AnimationController(
      duration: const Duration(milliseconds: 1500),
      vsync: this,
    );
    
    _bounceAnimation = Tween<double>(
      begin: 0.0,
      end: 15.0,
    ).animate(CurvedAnimation(
      parent: _bounceController,
      curve: Curves.easeInOut,
    ));
    
    _fadeAnimation = Tween<double>(
      begin: 0.0,
      end: 1.0,
    ).animate(CurvedAnimation(
      parent: _fadeController,
      curve: Curves.easeIn,
    ));
    
    // –ó–∞–ø—É—Å–∫ –∞–Ω–∏–º–∞—Ü–∏–π
    _fadeController.forward();
    _bounceController.repeat(reverse: true);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–∞—è –∏–≥—Ä–∞
    _checkSavedGame();
  }

  @override
  void dispose() {
    _bounceController.dispose();
    _fadeController.dispose();
    super.dispose();
  }

  /// –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞–ª–∏—á–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–π –∏–≥—Ä—ã
  Future<void> _checkSavedGame() async {
    try {
      final hasGame = await _gameService.loadCurrentGame();
      // TODO: –ü–æ–∫–∞–∑–∞—Ç—å –∫–Ω–æ–ø–∫—É "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å" –µ—Å–ª–∏ –µ—Å—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–∞—è –∏–≥—Ä–∞
      print('–°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–∞—è –∏–≥—Ä–∞: $hasGame');
    } catch (e) {
      print('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–π –∏–≥—Ä—ã: $e');
    }
  }

  /// –ù–∞—á–∞—Ç—å –Ω–æ–≤—É—é –∏–≥—Ä—É
  void _startNewGame() {
    Navigator.of(context).push(
      MaterialPageRoute(
        builder: (context) => const CharacterSelectionScreen(),
      ),
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: AppColors.backgroundLight,
      body: SafeArea(
        child: FadeTransition(
          opacity: _fadeAnimation,
          child: Column(
            children: [
              const Spacer(flex: 1),
              
              // –ó–∞–≥–æ–ª–æ–≤–æ–∫
              Padding(
                padding: const EdgeInsets.symmetric(horizontal: AppSizes.paddingLarge),
                child: Text(
                  AppTexts.welcomeTitle,
                  style: Theme.of(context).textTheme.headlineLarge?.copyWith(
                    fontSize: 28,
                  ),
                  textAlign: TextAlign.center,
                ),
              ),
              
              const Spacer(flex: 1),
              
              // –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–µ—Ä—Å–æ–Ω–∞–∂
              AnimatedBuilder(
                animation: _bounceAnimation,
                builder: (context, child) {
                  return Transform.translate(
                    offset: Offset(0, -_bounceAnimation.value),
                    child: Container(
                      width: 200,
                      height: 200,
                      decoration: BoxDecoration(
                        color: Colors.white,
                        borderRadius: BorderRadius.circular(100),
                        boxShadow: [
                          BoxShadow(
                            color: AppColors.primaryBlue.withOpacity(0.2),
                            blurRadius: 20,
                            offset: const Offset(0, 10),
                          ),
                        ],
                      ),
                      child: Center(
                        child: Text(
                          'üéÆ', // –í—Ä–µ–º–µ–Ω–Ω–∞—è –∏–∫–æ–Ω–∫–∞, –ø–æ—Ç–æ–º –∑–∞–º–µ–Ω–∏–º –Ω–∞ –∞–Ω–∏–º–∞—Ü–∏—é
                          style: const TextStyle(fontSize: 80),
                        ),
                      ),
                    ),
                  );
                },
              ),
              
              const SizedBox(height: 32),
              
              // –û–ø–∏—Å–∞–Ω–∏–µ –∏–≥—Ä—ã
              Padding(
                padding: const EdgeInsets.symmetric(horizontal: AppSizes.paddingLarge),
                child: Text(
                  '–î–µ–ª–∞–π —É–º–Ω—ã–µ –≤—ã–±–æ—Ä—ã –∏ —Å—Ç–∞–Ω—å –º–∏–ª–ª–∏–æ–Ω–µ—Ä–æ–º!\n–ö–∞–∂–¥–æ–µ —Ä–µ—à–µ–Ω–∏–µ –≤–ª–∏—è–µ—Ç –Ω–∞ —Ç–≤–æ–π —É—Å–ø–µ—Ö.',
                  style: Theme.of(context).textTheme.bodyLarge?.copyWith(
                    color: AppColors.textDark.withOpacity(0.8),
                  ),
                  textAlign: TextAlign.center,
                ),
              ),
              
              const Spacer(flex: 2),
              
              // –ö–Ω–æ–ø–∫–∞ "–ò–≥—Ä–∞—Ç—å"
              Padding(
                padding: const EdgeInsets.symmetric(horizontal: AppSizes.paddingLarge),
                child: SizedBox(
                  width: double.infinity,
                  child: ElevatedButton(
                    onPressed: _startNewGame,
                    style: ElevatedButton.styleFrom(
                      backgroundColor: AppColors.accentOrange,
                      foregroundColor: Colors.white,
                      padding: const EdgeInsets.symmetric(vertical: 20),
                      textStyle: const TextStyle(
                        fontSize: 24,
                        fontWeight: FontWeight.bold,
                      ),
                      shape: RoundedRectangleBorder(
                        borderRadius: BorderRadius.circular(16),
                      ),
                      elevation: 8,
                    ),
                    child: Row(
                      mainAxisAlignment: MainAxisAlignment.center,
                      children: [
                        const Text('üéÆ'),
                        const SizedBox(width: 12),
                        const Text('–ò–ì–†–ê–¢–¨'),
                      ],
                    ),
                  ),
                ),
              ),
              
              const SizedBox(height: 16),
              
              // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ (–ø–æ–∫–∞ —Å–∫—Ä—ã—Ç—ã)
              // TODO: –î–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫–∏ "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å", "–ù–∞—Å—Ç—Ä–æ–π–∫–∏" –≤ –±—É–¥—É—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö
              
              const Spacer(flex: 1),
              
              // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –≤–Ω–∏–∑—É
              Padding(
                padding: const EdgeInsets.symmetric(horizontal: AppSizes.paddingLarge),
                child: Row(
                  children: [
                    Expanded(
                      child: _buildInfoCard(
                        icon: 'üí∞',
                        title: '–î–µ–Ω—å–≥–∏',
                        description: '–£—á–∏—Å—å –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å',
                      ),
                    ),
                    const SizedBox(width: 12),
                    Expanded(
                      child: _buildInfoCard(
                        icon: 'üìò',
                        title: '–ó–Ω–∞–Ω–∏—è',
                        description: '–†–∞–∑–≤–∏–≤–∞–π —Å–≤–æ–π —É–º',
                      ),
                    ),
                    const SizedBox(width: 12),
                    Expanded(
                      child: _buildInfoCard(
                        icon: 'üí°',
                        title: '–≠–Ω–µ—Ä–≥–∏—è',
                        description: '–ë–µ—Ä–µ–≥–∏ –∑–¥–æ—Ä–æ–≤—å–µ',
                      ),
                    ),
                  ],
                ),
              ),
              
              const SizedBox(height: AppSizes.paddingLarge),
            ],
          ),
        ),
      ),
    );
  }

  /// –°–æ–∑–¥–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—É—é –∫–∞—Ä—Ç–æ—á–∫—É
  Widget _buildInfoCard({
    required String icon,
    required String title,
    required String description,
  }) {
    return Container(
      padding: const EdgeInsets.all(16),
      decoration: BoxDecoration(
        color: Colors.white,
        borderRadius: BorderRadius.circular(12),
        boxShadow: [
          BoxShadow(
            color: AppColors.primaryBlue.withOpacity(0.1),
            blurRadius: 8,
            offset: const Offset(0, 4),
          ),
        ],
      ),
      child: Column(
        children: [
          Text(
            icon,
            style: const TextStyle(fontSize: 24),
          ),
          const SizedBox(height: 8),
          Text(
            title,
            style: Theme.of(context).textTheme.bodyMedium?.copyWith(
              fontWeight: FontWeight.bold,
              color: AppColors.textDark,
            ),
          ),
          const SizedBox(height: 4),
          Text(
            description,
            style: Theme.of(context).textTheme.bodySmall?.copyWith(
              color: AppColors.textDark.withOpacity(0.7),
            ),
            textAlign: TextAlign.center,
          ),
        ],
      ),
    );
  }
} 